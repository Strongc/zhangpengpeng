程序设计方法学
1966年，G.Jacopini和C.Bohm从理论上证明了任何程序都可以用序列结构，条件结构和循环结构表示出来。
结构化定理：任一正规程序都可以函数等价于一个由基集合{序列，if-then-else，while-do} 产生的结构化程序。

逐步求精的程序设计方法：由整体到细节，层层深入。

软件重用技术：库函数、组件、应用框架、设计模式。
   组件是代码的重用
   框架介于两者之间，部分代码重用，部分设计重用
   设计模式是设计的重用
内部重用：在同一个应用中能公共使用的抽象块；
代码重用：将通用模块合成库或工具集，以便在多个应用领域都能用；
应用框架重用：为专用领域提供通用的或现成的基础结构。

调试对有限几组初值进行试算，有局限性。可以帮助人发现程序中的错误，但不能证明没有错误。Thus,debug不能证明程序是正确的。

一个程序是完全正确的 等价于 该程序是部分正确的同时又是终止的。
程序正确性证明的各种方法，虽各有特点，但基本思路相同。即证明对满足输入断言的变量集，程序执行后，输出断言成立。
形式化：要证明程序段S的正确性就是要证明下列断言成立：{Q}S{R} 。
Q为输入断言/变量的初始状态，R为输出断言/变量的终结状态。
断言assertion是对算法中某处具体条件的描述，为逻辑表达式；
不断言invariant是一个条件，在算法中的某个位置，不变式恒为true。

可以证明，每个迭代程序原则上总可以转换成为与它等价的递归程序，但反之不然，即并不是每个递归程序都可以转换成与它等价的迭代程序。但就效率而言，递归程序的实现往往要比迭代程序耗费更多的时间和存储空间。